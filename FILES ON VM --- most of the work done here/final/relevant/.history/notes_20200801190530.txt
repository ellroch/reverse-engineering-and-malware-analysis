index: line=offset from base
make clean =5
segfault trigger=8
strings=11
chmod/executing python=19
AFL=30


base


install python - 2 shouold be installed by default

make clean
in this env, using exec_bin folder


segfault means memory issue: possible overflow if the input is oversized

strings <file> | egrep [-i, -v] <regular expression> ------ model
strings <file> | egrep [-i, -v] "^(\." -------------------- starts with a period
strings <file> | egrep [-i, -v] "^(\.|[_]{1,2}" ------------ starts with a period or 1-2 underscores

-i grabs everything that matches the regular expression
-v (inverts selection) grabs everything that doesnt match the regular expression


chmod +x <filename>
    this makes it so you can ./ for execution
    or just type in "python <filename>" to execute it
    execute the file and then pipe the output to the program:
    ./<pythonfile.py> | exec_binary
#use sys.stdout.write() instead of print()
#it adds newlinds and interprets values  
#that you may not want interpreted



AFL is google fuzzing library "American Fuzzy Lop"
afl install & add path to .bashrc file: fuzzing vid pre 30 min
afl compiler demoed in fuzzing vid @29:40
(see github quickstart section 6 "fuzzing binaries 
for explanation of the following)

run from exec folder:
afl-fuzz -i AFLcases/ -o fuzzfound/ fuzzing/exec_AFL/<bin1 or bin2>

on setting up test cases: see afl training in documentation (genetic algorithm / permutation training)
see section: harness

logging in as root: sudo -s