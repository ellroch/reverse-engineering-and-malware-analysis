;stdcall callee cleans stack
;nasm -f elf32 astdcall.asm
;ld -m elf_i386 stdcall.asm -o stdcall
;gcc -m32 stdcall.o -o stdcall

extern printf
bits 32

section .data:
    format: db "%d", 10


;   When linking with system libraries do not use 'start'
;   Main is expected to be 'main' when linking with system libraries

section .text:
    global main

main:
;   function prologue
    push ebp
    mov  ebp, esp
    push ebx; [ebp]
    push esi; [ebp-0x04]
    push edi; [ebp-0x08]

    sub  esp, 0xc; esp = [ebp-0x14] (3 local variables, two for input, one for returns)
;   mov dword <LOCATION>, 0x17
    mov dword [ebp-0xc], 0x17
;   mov dword <LOCATION>, 0x2e
    mov dword [ebp-0x10], 0x2e                          
;...program...
    push eax; [ebp-0x18]
    push ecx; [ebp-0x1c]
    push edx; [ebp-0x20]
;   funcone(int1, int2)
;   push argument 2
    push dword [ebp-0x10]; 0x2e funcone[ebp+0x0c]
;   push argument 1
    push dword [ebp-0xc]; 0x17, funcone[ebp+0x08]
    call funcone; pushes current address on stack, funcone[ebp+0x04]
    mov [ebp-0x14], eax

;   push variable onto stack to print
    push dword format
    call printf
;...clean up...
;terminate program



funcone:
;   function prologue
    push ebp
    mov  ebp, esp
    push ebx; [ebp]
    push esi; [ebp-0x04]
    push edi; [ebp-0x08]
;   do the math (multiply them)
    
;   clean the stack



functwo:
;   function prologue
    push ebp
    mov  ebp, esp
    push ebx; [ebp]
    push esi; [ebp-0x04]
    push edi; [ebp-0x08]
;   do the math (sub 10)

;   clean the stack