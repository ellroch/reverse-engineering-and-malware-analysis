;nasm -f elf32 assign1_outline.asm
;gcc -m32 assign1_outline.o -o <outputBinary>

extern printf
bits 32

section .data:
    format: db "%d", 10

;   When linking with system libraries do not use 'start'
;   Main is expected to be 'main' when linking with system libraries

section .text:
    global main

main:
;   function prologue
    push ebp
    mov  ebp, esp
    sub  esp, 0x0c
;   mov dword <LOCATION>, 0x17
    mov dword [ebp-0x04], 0x17
;   mov dword <LOCATION>, 0x2e
    mov dword [ebp-0x08], 0x2e
;...program...
;   caller saves:
    push eax
    push ecx
    push edx
;   foo(int1, int2)
;   push int2, then int 1
    push dword [ebp-0x08];[ebp+0x0c]
    push dword [ebp-0x04];[ebp+0x08]
    call foo;adds return address to stack [ebp+0x04]
    mov [ebp-0x0c], eax
;====================================================================
;   restore registers
;    pop edx
;    pop ecx
;    pop eax
;
;   caller saves:
;    push eax
;    push ecx
;    push edx
;   push variable onto stack to print
;    push dword [ebp-0x0c]
    push dword format
    call printf
;   restore registers
    pop edx
    pop ecx
    pop eax
;...clean up...
;terminate program
    mov ebx, eax
    mov eax, 0x01
    int 0x80


foo:
    push ebp;[ebp]
    mov  ebp, esp

    mov eax, [ebp+0x08]
    mov edx, [ebp+0x0c]
    imul eax, edx

    mov esp, ebp
    pop ebp
    ret

foob:
